version: "3.9"

services:
  db:
    image: postgres:16
    container_name: db
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "postgres" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  django-app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/code
      - ./media:/var/www/zpi/media/
      - ./logs:/code/logs/django
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A zpi worker --loglevel=info
    volumes:
      - ./backend:/code
      - ./media:/var/www/zpi/media/
      - ./logs:/code/logs/django
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
      - django-app

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A zpi beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend:/code
      - ./media:/var/www/zpi/media/
      - ./logs:/code/logs/django
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
      - django-app

  angular-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile  # Specify the Dockerfile for the Angular service
    ports:
      - "4200:4200"  # Map port 4200 from the host to port 4200 in the container
    depends_on:
      - django-app

  django-test:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: python3 manage.py test
    volumes:
      - ./backend:/code
      - ./logs:/code/logs/django
    environment:
      - POSTGRES_NAME=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - db
      - django-app
